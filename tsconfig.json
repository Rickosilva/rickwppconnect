{
  "type":"module",
  "ts-node": {
    "esm": true,
    /* "experimentalSpecifierResolution": "node" */
  }, 
  "compilerOptions": {
     /* Language and Environment */
    "target": "esnext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
   
    /* Modules */
    "module": "commonjs" /* Specify what module code is generated. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
   
    "types": [
      "jest",
      "module"
    ] /* Specify type package names to be included without being referenced in a source file. */,
   
    "resolveJsonModule": true /* Enable importing .json files. */,

    /* JavaScript Support */
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    
    /* Emit */
    "declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
    "emitDeclarationOnly": true /* Only output d.ts files and not JavaScript files. */,
    "outDir": "./dist" /* Specify an output folder for all emitted files. */,
    
    /* Interop Constraints */
   "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
   "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": false /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
   
    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "include": ["src/**/*"],
  "exclude": ["src/tests/**/*", "node_modules"]
}
